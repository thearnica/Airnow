import {  waterfall,  removeClassFrom,  inTime,  willRemoveClassFrom,  getBoundingClientRect, getScrollTop, attachScrollHandler, attachLayoutScrollHandler, withNoTransitionOn, QSA} from "./global";import {  addBlock1ToCommonElements, addHandler,  getAdvElements,  pageStart,  promoStart,  removeAnimationFromCommonElement} from "./startPage";export const getPageScroll = () => {  let lastPageScroll = 0;  let lastScrollDelta = 0;  let resortScrollTimeout = 0;  const resortOnScroll = () => {    if (resortScrollTimeout) {      return;    }    const advElements = getAdvElements();    let height = window.innerHeight;    let scrollTop = getScrollTop();    let bottom = height + scrollTop;    let items = advElements      .filter(({done}) => !done)      .map(function (item) {        return {          position: getBoundingClientRect(item),          item: item,        }      })      .sort(function (a, b) {        let diff = a.position.top - b.position.top;        if (Math.abs(diff) < 10) {          let oDiff = a.order - b.order;          return oDiff            ? oDiff            : a.position.left - b.position.left;        }        return diff;      })      .filter(itemRecord => itemRecord.position.top < bottom - height / 5)      .filter(itemRecord => itemRecord.position.bottom > 0);    if (items.length) {      const {item} = items[0];      removeAnimationFromCommonElement(item);      item.done = true;      resortScrollTimeout = setTimeout(() => {          resortScrollTimeout = 0;          resortOnScroll();        }, item.dataset.noAnimationDelay ? 0 : 300      )    }  };  return function () {    let scrollTop = getScrollTop();    const deltaScroll = scrollTop - lastPageScroll;    if (scrollTop === 0) {    }    if (deltaScroll > 0) {    }    if (deltaScroll < 0) {    }    lastScrollDelta = deltaScroll;    lastPageScroll = scrollTop;    if (scrollTop > 0) {    }    resortOnScroll();  }};const onPageScroll = () => {  let onScroll = getPageScroll();  attachScrollHandler(onScroll);  setTimeout(function () {    onScroll(0);  }, 300);};// const mobileAnimation = ({pastScroll}) => {//   if (window.matchMedia("(max-width: 1023px)").matches) {//     waterfall([//       inTime(pastScroll * 300),//       inTime(0, willRemoveClassFrom('.airnow-promo__light', 'airnow-promo__light--hidden')),//     ])//   }// };// promo list scrollconst promoListScrollFollow = () => {  const list = document.querySelector('.airnow-promo__list');  attachLayoutScrollHandler(() => {    const {height} = list.getBoundingClientRect();    const maxHeight = height * 1.8;    const scroll = Math.min(maxHeight, window.scrollY);    const f = 1 - scroll / (maxHeight * 4);    const o = 1 - scroll / (maxHeight * 2.5);    list.style.transform = `translateY(${scroll}px) scaleY(${f})`;    list.style.opacity = o;    if (scroll >= maxHeight) {      addBlock1ToCommonElements();    }  });};const promoSloganScrollFollow = () => {  const list = document.querySelector('.airnow-promo__tip');  const top = list.getBoundingClientRect().top + window.scrollY;  withNoTransitionOn(list, () => {    list.style.transform = `translateY(-1000px)`;    list.style.opacity = 0;  });  attachLayoutScrollHandler(() => {    const {height} = list.getBoundingClientRect();    const maxHeight = height * 1.8;    const scroll = Math.min(0, window.scrollY + window.innerHeight / 2 - top);    const o = window.scrollY - top;    list.style.transform = `translateY(${scroll}px)`;    list.style.opacity = 1 + scroll/(window.innerHeight / 2);    if (scroll >= maxHeight) {      addBlock1ToCommonElements();    }  });};const isMobile = window.matchMedia("(max-width: 639px)").matches;const baseScaleTop = isMobile ? 0.7 : 1;const baseScaleBottom = isMobile ? 0.5 : 1;const moneyRainTop = () => {  const rand = (min, max) => min + Math.random() * (max - min);  const bucket = document.querySelector(".airnow-promo__space-content");  const bottom = document.querySelector(".airnow-promo__bottom");  const NUM_MONEY = 10;  const getMoney = (x, index) => {    const TTL = 6000;    const img = document.createElement('img');    img.className = "dollar";    img.src = `../images/dollar${Math.round(rand(1, 3))}.svg`;    bucket.appendChild(img);    const updatePosition = () => {      const bb = bucket.getBoundingClientRect();      const eb = bottom.getBoundingClientRect();      const deltaStart = eb.width * 0.2;      const start = [rand(-deltaStart, eb.width + deltaStart), -100];      const end = [eb.width / 2, eb.top - bb.top + eb.width / 1.5 + 32];      const sf = rand(0, 0.2);      const se = 0.35;// rand(0.3, 0.5);      const v = [end[0] - start[0], end[1] - start[1]];      const source = [start[0] + v[0] * sf, start[1] + v[1] * sf];      const target = [end[0] - v[0] * se, end[1] - v[1] * se];      const rotationStart = rand(-190, 190);      const rotationEnd = rand(-190, 190);      withNoTransitionOn(img, () => {        img.style.transform = `translate(${source[0]}px, ${source[1]}px) rotate(${rotationStart}deg) scale(${baseScaleTop})`;        img.classList.remove('dollar--visible');      });      img.style.transform = `translate(${target[0]}px, ${target[1]}px) rotate(${rotationEnd}deg) scale(${baseScaleTop * 0.8})`;      img.classList.add('dollar--visible');    };    setTimeout(() => {      updatePosition();      setInterval(() => {        img.classList.remove('dollar--visible');        setTimeout(updatePosition, 200);      }, TTL);    }, index * (TTL / NUM_MONEY));  };  Array(NUM_MONEY).fill(1).map(getMoney);};const moneyRainBottom = () => {  const rand = (min, max) => min + Math.random() * (max - min);  const bucket = document.querySelector(".airnow-promo__space-content");  const bottom = document.querySelector(".airnow-promo__bottom");  const getMoney = () => {    const TTL = 4700;//rand(2, 5) * 1000;    const img = document.createElement('img');    img.className = "dollar dollar--bottom";    img.src = `../images/dollar${Math.round(rand(1, 3))}.svg`;    bucket.appendChild(img);    const updatePosition = () => {      const bb = bucket.getBoundingClientRect();      const eb = bottom.getBoundingClientRect();      const start = [eb.width / 2, eb.top - bb.top];      const delta = eb.width / 3.5;      const end = [rand(-delta, delta) + eb.width / 2, eb.bottom - bb.top];      const sf = 0.3 + rand(0, 0.2);      const se = 0.15 + rand(0.0, 0.12);      const v = [end[0] - start[0], end[1] - start[1]];      const source = [start[0] + v[0] * sf, start[1] + v[1] * sf];      const target = [end[0] - v[0] * se, end[1] - v[1] * se];      const rotationStart = rand(-390, 190);      const rotationEnd = rand(-190, 390);      withNoTransitionOn(img, () => {        img.style.transform = `translate(${source[0]}px, ${source[1]}px) rotate(${rotationStart}deg) scale(${baseScaleBottom * 0.8})`;        img.classList.remove('dollar--visible');      });      img.style.transform = `translate(${target[0]}px, ${target[1]}px) rotate(${rotationEnd}deg) scale(${baseScaleBottom})`;      img.classList.add('dollar--visible');    };    // updatePosition();    setTimeout(() => {      updatePosition();      setInterval(() => {        img.classList.remove('dollar--visible');        setTimeout(updatePosition, 200);      }, TTL);    }, rand(0, 6) * 1000);  };  const NUM_MONEY = 7;  Array(NUM_MONEY).fill(1).map(getMoney);};const loopPhoneAnimation = () => {  const promoDevice = document.querySelector('.airnow-promo__device');  const addCommon = selector => (    withNoTransitionOn(selector, (item) => {      item.classList.add(`${selector.substr(1)}--hidden`);    })  );  const hideCommon = selector => (    QSA(selector)[0].classList.remove(`${selector.substr(1)}--hidden`)  );  setTimeout(() => {    promoDevice.classList.add('airnow-promo__device--move-out');    setTimeout(() => {      withNoTransitionOn(promoDevice, () => {        promoDevice.classList.remove('airnow-promo__device--move-out');      });      addCommon('.airnow-promo__case-wrapper');      addCommon('.airnow-promo__phone-wrapper');      hideCommon('.airnow-promo__case-wrapper');      hideCommon('.airnow-promo__phone-wrapper');      setTimeout(loopPhoneAnimation, 1000);    }, 1000);  }, 1600)};let startAnimation = () => {  document.addEventListener('keydown', (event) => {    console.log(event.keyCode);    if(event.keyCode===9) {      document.body.classList.add('accessible-tabs')    }  }, true);  addHandler('.airnow-promo__case-wrapper', 'common-animation', () => {    setTimeout(loopPhoneAnimation, 1800);// 800 is initial animation delay  });  removeClassFrom('.airnow-page', 'airnow-page--hidden');  promoListScrollFollow();  promoSloganScrollFollow();  const pastScroll = getScrollTop() < 500 ? 1 : 0;  moneyRainTop();  moneyRainBottom();  pageStart();  promoStart();  waterfall([    inTime(pastScroll * 500),    inTime(0, willRemoveClassFrom('.airnow-promo__slogan', 'airnow-promo__slogan--hidden')),    inTime(pastScroll * 100),    inTime(0, willRemoveClassFrom('.airnow-promo__start', 'airnow-promo__start--hidden')),    inTime(pastScroll * 100),    inTime(0, willRemoveClassFrom('.airnow-promo__item', 'airnow-promo__item--hidden')),    inTime(pastScroll * 300),    inTime(0, willRemoveClassFrom('.airnow-header', 'airnow-header--hidden')),    inTime(pastScroll * 500, onPageScroll),  ])  ;};startAnimation();